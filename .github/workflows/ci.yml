name: ci
on:
  pull_request:
  push:
    branches:
      - raylib

env:
  VCPKG_ROOT: '~/vcpkg'

jobs:
  Test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-24.04
        compiler:
          - llvm-19
        buildtype:
          - dev
          - rel
    steps:
      # caches all the ccache, vcpkg cmake build files for better recompilation times
      - uses: actions/checkout@v3
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxinerama-dev \
            libxcursor-dev \
            xorg-dev \
            libglu1-mesa-dev \
            pkg-config

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ./build/
            ~/vcpkg
            ~/.cache/vcpkg/archives
            ${{ env.LOCALAPPDATA }}/vcpkg/archives
            ${{ env.APPDATA }}/vcpkg/archives
            ${{ env.XDG_CACHE_HOME }}/vcpkg/archives
            ~/.cache/ccache
            ~/.ccache
            ~/.config/ccache
            ~/Library/Caches/ccache
            ${{ env.LOCALAPPDATA }}/ccache
            ${{ env.XDG_CACHE_HOME }}/ccache
          key: ${{ runner.os }}-${{ matrix.compiler }}-${{ env.BUILD_TYPE }}-${{ hashFiles('**/CMakeLists.txt', './vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.BUILD_TYPE }}-

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          cmake: true
          ninja: true
          vcpkg: true
          # cppcheck: true
          # clang-tidy: true # instead of `true`, which chooses the default version, you can pass a specific version.
          # ...
      - name: "Configure CMake"
        run: >
          cmake -S .
          --preset ${{ matrix.buildtype }}

      - name: "Build"
        run: >
          cmake --build build-${{ matrix.buildtype }}

